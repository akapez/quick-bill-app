// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum Status {
  OPEN
  PAID
  VOID
  UNCOLLECTIBLE
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  role UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  sentInvoices Invoice[] @relation("Sender")
  receivedInvoices Invoice[] @relation("Receiver")

}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String?
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])  
}


model Invoice {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  invoiceNumber String
  senderId String @db.ObjectId
  receiverId String @db.ObjectId
  billingName String
  billingEmail String
  description String
  amount Float
  status Status @default(OPEN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sender User @relation(fields: [senderId], references: [id], onDelete: Cascade, name: "Sender")
  receiver User @relation(fields: [receiverId], references: [id], onDelete: Cascade, name: "Receiver")

}